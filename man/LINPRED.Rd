% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LINPRED.R
\name{LINPRED}
\alias{LINPRED}
\title{Macro to build code for linear predictor from R formula}
\arguments{
\item{formula}{An R formula, possibly with the parameters followed by 
brackets containing indices. If there are no indices, the macro attempts
to guess the correct indices from the context. The formula must be 
right-hand side only (e.g. ~x). This must always be the first argument supplied
to LINPRED.}

\item{link}{A link function which will be applied to the 
left-hand-side (the response) in the final linear predictor. Default is none.}

\item{coefPrefix}{All model coefficient names will begin with this prefix.
default is beta_ (so x becomes beta_x, etc.)}

\item{sdPrefix}{All dispersion parameters will begin with this prefix.
default is no prefix.}

\item{priorSpecs}{Prior specifications, should be generated with setPrior()}

\item{modMatNames}{Logical, should parameters be named so they match the
names you would get from R's model.matrix function?}

\item{noncenter}{Logical; use noncentered parameterization?}

\item{centerVar}{Grouping covariate to 'center' on in parameterization. By
default all random effects have mean 0 as with lme4.}

\item{spatialModel}{Optional call to a supported spatial model.}

\item{spatialIndex}{Optional specification of index range for spatial
random effect. If left out, the index range provided on the left-hand
side of the declaration is used.}
}
\description{
Converts an R formula into corresponding code for a linear predictor in NIMBLE model code.
Options are available to specify a link function and to also generate
code for priors corresponding to the parameters in the linear predictor.
}
\examples{
constants <- list(x = rnorm(3), x2 = factor(letters[1:3]))
code <- nimbleCode({
  mu[1:3] <- LINPRED(~x + x2)
})

mod <- nimbleModel(code, constants=constants)
mod$getCode()
}
\author{
Ken Kellner
}
