% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nimbleLM.R
\name{nimbleLM}
\alias{nimbleLM}
\title{Macro for fitting linear models, GLMs, and GLMMs}
\arguments{
\item{formula}{An R formula, possibly with the parameters followed by 
brackets containing indices. If there are no indices, the macro attempts
to guess the correct indices from the context. Formulas can include
random effects via lme4-style notation (e.g. ~ x + (1|group))}

\item{family}{A description of the error distribution and link function to
be used in the model. This can be a character string naming a family function, 
a family function or the result of a call to a family function. See ?family}

\item{coefPrefix}{All model coefficient names will begin with this prefix.
default is beta. (so x becomes beta.x, etc.)}

\item{sdPrefix}{All dispersion parameters will begin with this prefix.
default is no prefix.}

\item{coefPrior}{BUGS code for prior on coefficients. Default is dnorm(0, sd=10).
If this parameter is specified, the priors() macro will also be called.}

\item{sdPrior}{BUGS code for prior on dispersion parameters. Default is
half-Cauchy T(dt(0, 0.1, 1), 0,). If this parameter is specified, the
priors() macro will also be called.}
}
\description{
This macro supports formula notation and arguments similar to R functions
such as lm(), glm(), and lmer()/glmer(). Currently only normal and Poisson
models are supported.
}
\examples{
\donttest{
constants <- list(y = rnorm(10),
                  x = rnorm(10), 
                  x2 = factor(sample(letters[1:3], 10, replace=TRUE)))

code <- nimbleCode({
  nimbleLM(y ~ x + x2)
})
nimble:::codeProcessModelMacros(code, constants)$code

# equivalent
code <- nimbleCode({
  y ~ nimbleLM(~ x + x2)
})
nimble:::codeProcessModelMacros(code, constants)$code
}
}
\author{
Ken Kellner
}
